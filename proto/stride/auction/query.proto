syntax = "proto3";
package stride.auction;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "stride/auction/auction.proto";

option go_package = "github.com/Stride-Labs/stride/v26/x/auction/types";

// Query defines the gRPC querier service.
service Query {
  // Auction queries the auction info for a specific token
  rpc Auction(QueryAuctionRequest) returns (QueryAuctionResponse) {
    option (google.api.http).get = "/stride/auction/{name}";
  }

  // Auctions queries the auction info for a specific token
  rpc Auctions(QueryAuctionsRequest) returns (QueryAuctionsResponse) {
    option (google.api.http).get = "/stride/auction/auctions";
  }
}

// QueryAuctionRequest is the request type for the Query/Auction RPC
// method
message QueryAuctionRequest { string name = 1; }

// QueryAuctionResponse is the response type for the Query/Auction RPC
// method
message QueryAuctionResponse {
  Auction auction = 1 [ (gogoproto.nullable) = false ];
}

// QueryAuctionsRequest is the request type for the
// Query/Auctions RPC method
message QueryAuctionsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryAuctionsResponse is the response type for the
// Query/Auctions RPC method
message QueryAuctionsResponse {
  repeated Auction auctions = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
