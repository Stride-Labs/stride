syntax = "proto3";
package stride.stakeibc;

import "stride/stakeibc/validator.proto";
import "stride/stakeibc/ica_account.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/Stride-Labs/stride/v4/x/stakeibc/types";

// next id: 19
message HostZone {
  string chain_id = 1;
  string connection_id = 2;
  string bech32prefix = 17;
  string transfer_channel_id = 12;
  repeated Validator validators = 3;
  repeated Validator blacklisted_validators = 4;
  ICAAccount withdrawal_account = 5;
  ICAAccount fee_account = 6;
  ICAAccount delegation_account = 7;
  ICAAccount redemption_account = 16;
  // ibc denom on stride
  string ibc_denom = 8;
  // native denom on host zone
  string host_denom = 9;
  // TODO(TEST-68): Should we make this an array and store the last n redemption
  // rates then calculate a TWARR?
  string last_redemption_rate = 10 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string redemption_rate = 11 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // stores how many days we should wait before issuing unbondings
  uint64 unbonding_frequency = 14;
  // TODO(TEST-101) int to dec
  uint64 staked_bal = 13;
  string address = 18 [ (gogoproto.moretags) = "yaml:\"address\"" ];
  reserved 15;
}
