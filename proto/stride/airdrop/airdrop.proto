syntax = "proto3";
package stride.airdrop;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/Stride-Labs/stride/v22/x/airdrop/types";

// ClaimType enum represents the possible claim types for a user getting an
// airdrop
enum ClaimType {
  option (gogoproto.goproto_enum_prefix) = false;

  // DAILY indicates that the airdrop rewards are accumulated daily
  DAILY = 0;
  // CLAIM_AND_STAKE indicates that the airdrop rewards have been claimed but
  // are lock-staked until at least when the airdrop is over
  CLAIM_AND_STAKE = 1;
  // CLAIM_EARLY indicates that the airdrop rewards have been claimed early,
  // with half going to the user and half being clawed back
  CLAIM_EARLY = 2;
}

// AllocationRecord tracks the status of an allocation for a user on a specific
// airdrop
message AllocationRecord {
  // ID of the airdrop
  uint64 airdrop_id = 1;

  // Address of the account that is receiving the airdrop allocation
  // The address does not have to be a stride address - but non-stride addresses must 
  // be linked and merged into a stride address before claiming
  string user_address = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // The total amount of tokens that have already been claimed
  string claimed = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // The current state of allocations for this airdrop
  //
  //
  // Ex 1:
  //   Day 0: {claimed:0, allocations:[10,10,10], claim_type:DAILY}
  //   *MsgClaim*
  //   Day 1: {claimed:10, allocations:[0,10,10], claim_type:DAILY}
  //   *MsgClaim*
  //   Day 2: {claimed:20, allocations:[0,0,10], claim_type:DAILY}
  //
  // Ex 2:
  //   Day 0: {claimed:0, allocations:[10,10,10], claim_type:DAILY}
  //   *MsgClaimAndStake*
  //   Day 1: {claimed:30, allocations:[0,0,0], claim_type:CLAIM_AND_STAKE}
  //
  // Ex 3:
  //   Day 0: {claimed:0, allocations:[10,10,10], claim_type:DAILY}
  //   *MsgClaimEarly*
  //   Day 1: {claimed:15, allocations:[0,0,0], claim_type:CLAIM_EARLY}
  repeated string allocations = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"
  ];

  ClaimType claim_type = 5;
}

// AirdropRecord track the aggregate unbondings across an epoch
message AirdropRecord {
  // Airdrop ID
  uint64 id = 1;

  // Distribution start date
  google.protobuf.Timestamp distribution_start_date = 2
      [ (gogoproto.stdtime) = true ];

  // Distribution end date
  google.protobuf.Timestamp distribution_end_date = 3
      [ (gogoproto.stdtime) = true ];

  // Clawback date
  google.protobuf.Timestamp clawback_date = 4 [ (gogoproto.stdtime) = true ];

  // Claim type deadline date
  google.protobuf.Timestamp claim_type_deadline_date = 5
      [ (gogoproto.stdtime) = true ];

  // Early claim penalty
  string early_claim_penalty = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // Distribution account
  string distribution_account = 7
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}
