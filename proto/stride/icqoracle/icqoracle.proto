syntax = "proto3";
package stride.icqoracle;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/Stride-Labs/stride/v24/x/icqoracle/types";

// TokenPrice stores latest price data for a token
message TokenPrice {
  // Token denom on its base chain (e.g. "uatom", "uosmo", "udym")
  string denom = 1;

  // Token denom on its base chain (e.g. "uosmo", "uatom", "udym")
  string base_denom = 2;
  // Quote denom on its base chain (e.g. "uosmo", "uatom", "udym")
  string quote_denom = 3;
  // Token denom on Osmosis (e.g. "uosmo", "ibc/...")
  string osmosis_base_denom = 4;
  // Quote denom on Osmosis (e.g. "uosmo", "ibc/...")
  string osmosis_quote_denom = 5;
  // Pool ID on Osmosis
  string osmosis_pool_id = 6;

  // Price in USDC or STRD
  string price = 7 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];

  // Last update timestamp
  google.protobuf.Timestamp updated_at = 8
      [ (gogoproto.stdtime) = true, (gogoproto.nullable) = false ];

  // Whether there is a price query currently in progress
  bool query_in_progress = 9;
}

// OracleParams stores global oracle parameters
message Params {
  // Osmosis chain identifier
  string osmosis_chain_id = 1 [
    (gogoproto.moretags) = "yaml:\"osmosis_chain_id\"",
    (gogoproto.jsontag) = "osmosis_chain_id"
  ];

  // Osmosis IBC connection identifier
  string osmosis_connection_id = 2 [
    (gogoproto.moretags) = "yaml:\"osmosis_connection_id\"",
    (gogoproto.jsontag) = "osmosis_connection_id"
  ];

  // Time between price updates
  uint64 update_interval_sec = 3 [
    (gogoproto.moretags) = "yaml:\"update_interval_sec\"",
    (gogoproto.jsontag) = "update_interval_sec"
  ];

  // Max time before price is considered stale
  uint64 timeout_sec = 4 [
    (gogoproto.moretags) = "yaml:\"timeout_sec\"",
    (gogoproto.jsontag) = "timeout_sec"
  ];
}
