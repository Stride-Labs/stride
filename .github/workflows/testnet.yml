on:
  workflow_dispatch:
    inputs:
      deployment_name:
        description: Testnet that you want to launch (e.g. droplet)
        required: true
  push:
    branches:
      - launch-net-actions

env:
  network_name: stride
  num_stride_nodes: 3

jobs:
  get-node-names:
    runs-on: ubuntu-latest
    steps:
      - id: set-output
        run: |
          node_names_array=""
          for (( i=1; i <= $num_stride_nodes; i++ )); do
            node_names_array+="\"${network_name}-node${i}\","
          done
          echo "::set-output name=node-names::[${node_names_array}]"
    outputs:
      node-names: ${{ steps.set-output.outputs.node-names }}

  build-stride:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build Stride
        run: make build

      - name: Store Stride Executable
        uses: actions/upload-artifact@v3
        with:
          name: strided
          path: ./build/strided
          retention-days: 1

  build-gaia:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Stride
        uses: actions/checkout@v3

      - name: Build Gaia
        run: |
          git clone https://github.com/Stride-Labs/gaia --branch v7.0.2-stride-second-attempt-5
          cd gaia
          go build -mod=readonly -trimpath -o $BUILDDIR ./...

      - name: Store Gaia Executable
        uses: actions/upload-artifact@v3
        with:
          name: gaiad
          path: ./build/gaiad
          retention-days: 1

  initialize-state:
    runs-on: ubuntu-latest
    needs: [build-stride, build-gaia]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialize State
        shell: bash
        run: ./scripts/testnet/setup_testnet_state.sh ${deployment_name} ${num_stride_nodes}

      - name: Download Strided
        uses: actions/download-artifact@v3
        with:
          name: strided
          path: ./build/strided

      - name: Download Gaiad
        uses: actions/download-artifact@v3
        with:
          name: gaiad
          path: ./build/gaiad

      - name: Persist State Files
        uses: actions/upload-artifact@v3
        with:
          name: state
          path: ./scripts/testnet/state
          retention-days: 1

  # build-stride-images:
  #   needs: [get-node-names, initialize-state]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-name: ${{ fromJson(needs.get-node-names.outputs.node-names) }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Restore State Files
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: state
  #         path: ./state

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Set up gcloud Cloud SDK environment
  #       uses: google-github-actions/setup-gcloud@v0.6.0
  #       with:
  #         version: "389.0.0"
  #         service_account_key: ${{ secrets.GCP_KEY }}
  #         project_id: ${{ secrets.GCP_NODES_PROJECT }}
  #         export_default_credentials: true

  #     - name: GCloud Configure Docker
  #       run: |
  #         gcloud auth configure-docker

  #     - name: Build Stride Node Images
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         file: "scripts/testnet/dockerfiles/Dockerfile.stride"
  #         build-args: |
  #           node_name=${{ matrix.node-name }}
  #         push: true
  #         platforms: linux/amd64
  #         tags: |
  #           stridelabs/nodes-${{ github.event.inputs.deployment_name }}:${{ matrix.node-name }}
  #           gcr.io/stride-nodes/${{ github.event.inputs.deployment_name }}:${{ matrix.node-name }}

  # build-gaia-image:
  #   needs: [initialize-state]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Construct Gaia Image
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: "{{defaultContext}}"
  #         file: "scripts/testnet/dockerfiles/Dockerfile.gaia"
  #         push: true
  #         platforms: linux/amd64
  #         build-args: deployment_name=${{ github.event.inputs.deployment_name }}
  #         tags: |
  #           stridelabs/nodes-${{ github.event.inputs.deployment_name }}:gaia
  #           gcr.io/stride-nodes/${{ github.event.inputs.deployment_name }}:gaia

  # build-hermes-image:
  #   needs: [initialize-state]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Construct Hermes Image
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: "{{defaultContext}}"
  #         file: "scripts/testnet/dockerfiles/Dockerfile.hermes"
  #         push: true
  #         platforms: linux/amd64
  #         build-args: deployment_name=${{ github.event.inputs.deployment_name }}
  #         tags: |
  #           stridelabs/nodes-${{ github.event.inputs.deployment_name }}:hermes
  #           gcr.io/stride-nodes/${{ github.event.inputs.deployment_name }}:hermes

  # build-icq-image:
  #   needs: [initialize-state]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Construct ICQ Image
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: "{{defaultContext}}"
  #         file: "scripts/testnet/dockerfiles/Dockerfile.icq"
  #         push: true
  #         platforms: linux/amd64
  #         build-args: deployment_name=${{ github.event.inputs.deployment_name }}
  #         tags: |
  #           stridelabs/nodes-${{ github.event.inputs.deployment_name }}:icq
  #           gcr.io/stride-nodes/${{ github.event.inputs.deployment_name }}:icq
