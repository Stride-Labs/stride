syntax = "proto3";
package stride.interchainquery;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/Stride-labs/stride/x/interchainquery/types";

message Query {
  string id = 1;
  string connection_id = 2;
  string chain_id = 3;
  string query_type = 4;
  map<string, string> query_parameters = 5;
  // TODO(TEST-15): Add this type annotation back after installing cosmos_proto   
  // (cosmos_proto.scalar) = "cosmos.Int",
  string period = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  // TODO(TEST-15): Add this type annotation back after installing cosmos_proto   
  // (cosmos_proto.scalar) = "cosmos.Int",
  string last_height = 7 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message DataPoint {
  string id = 1;
  // TODO(TEST-15): Add this type annotation back after installing cosmos_proto   
  // (cosmos_proto.scalar) = "cosmos.Int",
  string remote_height = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  // TODO(TEST-15): Add this type annotation back after installing cosmos_proto   
  // (cosmos_proto.scalar) = "cosmos.Int",
  string local_height = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  bytes value = 4 [ (gogoproto.jsontag) = "result,omitempty" ];
}

// GenesisState defines the epochs module's genesis state.
message GenesisState {
  repeated Query queries = 1 [ (gogoproto.nullable) = false ];
}