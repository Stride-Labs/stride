syntax = "proto3";
package Stridelabs.stride.stakeibc;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "stakeibc/params.proto";
import "stakeibc/validator.proto";
import "stakeibc/delegation.proto";
import "stakeibc/min_validator_requirements.proto";
import "stakeibc/host_zone.proto";
import "stakeibc/ica_account.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/Stride-labs/stride/x/stakeibc/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/Stridelabs/stride/stakeibc/params";
  }
  // Queries a Validator by index.
	rpc Validator(QueryGetValidatorRequest) returns (QueryGetValidatorResponse) {
		option (google.api.http).get = "/Stride-labs/stride/stakeibc/validator";
	}
// Queries a Delegation by index.
	rpc Delegation(QueryGetDelegationRequest) returns (QueryGetDelegationResponse) {
		option (google.api.http).get = "/Stride-labs/stride/stakeibc/delegation";
	}
// Queries a MinValidatorRequirements by index.
	rpc MinValidatorRequirements(QueryGetMinValidatorRequirementsRequest) returns (QueryGetMinValidatorRequirementsResponse) {
		option (google.api.http).get = "/Stride-labs/stride/stakeibc/min_validator_requirements";
	}
  // Queries a HostZone by index.
	rpc HostZone(QueryGetHostZoneRequest) returns (QueryGetHostZoneResponse) {
		option (google.api.http).get = "/Stride-labs/stride/stakeibc/host_zone";
	}
// Queries a ICAAccount by index.
	rpc ICAAccount(QueryGetICAAccountRequest) returns (QueryGetICAAccountResponse) {
		option (google.api.http).get = "/Stride-labs/stride/stakeibc/ica_account";
	}
// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetValidatorRequest {}

message QueryGetValidatorResponse {
	Validator Validator = 1 [(gogoproto.nullable) = false];
}
message QueryGetDelegationRequest {}

message QueryGetDelegationResponse {
	Delegation Delegation = 1 [(gogoproto.nullable) = false];
}
message QueryGetMinValidatorRequirementsRequest {}

message QueryGetMinValidatorRequirementsResponse {
	MinValidatorRequirements MinValidatorRequirements = 1 [(gogoproto.nullable) = false];
}
message QueryGetHostZoneRequest {}

message QueryGetHostZoneResponse {
	HostZone HostZone = 1 [(gogoproto.nullable) = false];
}
message QueryGetICAAccountRequest {}

message QueryGetICAAccountResponse {
	ICAAccount ICAAccount = 1 [(gogoproto.nullable) = false];
}
// this line is used by starport scaffolding # 3
