FROM golang:1.21.6-alpine3.18 AS builder

WORKDIR /opt

RUN apk add --update curl make git libc-dev bash gcc linux-headers eudev-dev python3

ENV COMMIT_HASH=v1.6.0

RUN git clone https://github.com/celestiaorg/celestia-app \
    && cd celestia-app \
    && git checkout $COMMIT_HASH \
    && CGO_ENABLED=0 make install

FROM alpine:3.18
COPY --from=builder /go/bin/celestia-appd /usr/local/bin/
RUN apk add bash vim \
    && addgroup -g 1000 celestia-app \
    && adduser -S -h /home/celestia-app -D celestia-app -u 1000 -G celestia-app

USER 1000
WORKDIR /home/celestia-app

EXPOSE 26657 26656 1317 9090

CMD ["celestia-appd", "start"]



# # stage 1 Generate celestia-appd Binary
# FROM --platform=$BUILDPLATFORM docker.io/golang:1.21.6-alpine3.18 as builder

# ARG TARGETOS
# ARG TARGETARCH

# ENV CGO_ENABLED=0
# ENV GO111MODULE=on
# # hadolint ignore=DL3018
# RUN apk update && apk add --no-cache \
#     gcc \
#     git \
#     # linux-headers are needed for Ledger support
#     linux-headers \
#     make \
#     musl-dev
# COPY . /celestia-app
# WORKDIR /celestia-app
# RUN uname -a &&\
#     CGO_ENABLED=${CGO_ENABLED} GOOS=${TARGETOS} GOARCH=${TARGETARCH} \
#     make build

# # stage 2
# FROM docker.io/alpine:3.19.0

# # Read here why UID 10001: https://github.com/hexops/dockerfile/blob/main/README.md#do-not-use-a-uid-below-10000
# ARG UID=10001
# ARG USER_NAME=celestia

# ENV CELESTIA_HOME=/home/${USER_NAME}

# # hadolint ignore=DL3018
# RUN apk update && apk add --no-cache \
#     bash \
#     curl \
#     jq \
#     && adduser ${USER_NAME} \
#     -D \
#     -g ${USER_NAME} \
#     -h ${CELESTIA_HOME} \
#     -s /sbin/nologin \
#     -u ${UID}

# # Copy in the binary
# COPY --from=builder /celestia-app/build/celestia-appd /bin/celestia-appd

# COPY --chown=${USER_NAME}:${USER_NAME} docker/entrypoint.sh /opt/entrypoint.sh

# USER ${USER_NAME}

# # p2p, rpc and prometheus port
# EXPOSE 26656 26657 1317 9090

# ENTRYPOINT [ "/bin/bash", "/opt/entrypoint.sh" ]