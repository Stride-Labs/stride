#!/bin/bash

set -eu 
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

### SETTING VARIABLES FOR LOCAL TO MAINNET BELOW ONLY

STRIDE_CHAIN_ID=local-test-1 # # DO NOT USE STRIDE MAINNET CHAIN ID! always use a new chain id by incrementing the suffix after each run
HOST_CHAIN_ID=cosmoshub-4 # chain id on the host
HOST_RPC=https://comsos-rpc.polkachu.com # RPC on the host
HOST_ACCOUNT_PREFIX=cosmos
HOST_DENOM=uatom
HOST_BINARY=build/gaiad
HOST_COIN_TYPE=118
HOST_VAL_NAME_1=imperator
HOST_VAL_ADDRESS_1=cosmosvaloper1vvwtk805lxehwle9l4yudmq6mn0g32px9xtkhc
HOST_VAL_NAME_2=notional
HOST_VAL_ADDRESS_2=cosmosvaloper1083svrca4t350mphfv9x45wq9asrs60cdmrflj
HOT_WALLET_1_ADDRESS=cosmos1c37n9aywapx2v0s6vk2yedydkkhq65zzeupe92

### ^^^ SETTING VARIABLES FOR LOCAL TO MAINNET ABOVEÂ ONLY ^^^ 

STATE=$SCRIPT_DIR/../state
LOGS=$SCRIPT_DIR/../logs
STRIDE_LOGS=$LOGS/stride.log
DOCKER_COMPOSE="docker-compose -f $SCRIPT_DIR/docker-compose.yml"

HERMES_STRIDE_MNEMONIC="alter old invest friend relief slot swear pioneer syrup economy vendor tray focus hedgehog artist legend antenna hair almost donkey spice protect sustain increase"
RELAYER_STRIDE_MNEMONIC="pride narrow breeze fitness sign bounce dose smart squirrel spell length federal replace coral lunar thunder vital push nuclear crouch fun accident hood need"

# cleanup any stale state
make stop-local-to-main
rm -rf $STATE $LOGS
mkdir -p $STATE
mkdir -p $LOGS

# Start stride
bash ${SCRIPT_DIR}/init_stride.sh $STRIDE_CHAIN_ID

$DOCKER_COMPOSE up -d stride1
$DOCKER_COMPOSE logs -f stride1 | sed -r -u "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g" > $STRIDE_LOGS 2>&1 &

printf "Waiting for Stride to start..."
( tail -f -n0 $STRIDE_LOGS & ) | grep -q "executed block.*height="
echo "Done"

# Setup relayers
mkdir -p $STATE/hermes
mkdir -p $STATE/relayer/config
HERMES_CONFIG_FILE="$STATE/hermes/config.toml"
RELAYER_CONFIG_FILE="$STATE/relayer/config/config.yaml"
cp ${SCRIPT_DIR}/templates/hermes_config.toml $HERMES_CONFIG_FILE
cp ${SCRIPT_DIR}/templates/relayer_config.yaml $RELAYER_CONFIG_FILE

# Update relayer templates
# sed -i -E "s|STRIDE_CHAIN_ID|$STRIDE_CHAIN_ID|g" $HERMES_CONFIG_FILE
# sed -i -E "s|HOST_CHAIN_ID|$HOST_CHAIN_ID|g" $HERMES_CONFIG_FILE
# sed -i -E "s|HOST_ENDPOINT|$HOST_ENDPOINT|g" $HERMES_CONFIG_FILE
# sed -i -E "s|HOST_ACCOUNT_PREFIX|$HOST_ACCOUNT_PREFIX|g" $HERMES_CONFIG_FILE
# sed -i -E "s|HOST_DENOM|$HOST_DENOM|g" $HERMES_CONFIG_FILE

sed -i -E "s|STRIDE_CHAIN_ID|$STRIDE_CHAIN_ID|g" $RELAYER_CONFIG_FILE
sed -i -E "s|HOST_CHAIN_ID|$HOST_CHAIN_ID|g" $RELAYER_CONFIG_FILE
sed -i -E "s|HOST_RPC|$HOST_RPC|g" $RELAYER_CONFIG_FILE
sed -i -E "s|HOST_ACCOUNT_PREFIX|$HOST_ACCOUNT_PREFIX|g" $RELAYER_CONFIG_FILE
sed -i -E "s|HOST_DENOM|$HOST_DENOM|g" $RELAYER_CONFIG_FILE
sed -i -E "s|HOST_COIN_TYPE|$HOST_COIN_TYPE|g" $RELAYER_CONFIG_FILE

# echo "Adding Hermes keys"
# HERMES_CMD="$SCRIPT_DIR/../../build/hermes/release/hermes --config $STATE/hermes/config.toml"
# TMP_MNEMONICS=$STATE/mnemonic.txt 
# echo "$HERMES_STRIDE_MNEMONIC" > $TMP_MNEMONICS
# $HERMES_CMD keys add --key-name hrly1 --chain $STRIDE_CHAIN_ID --mnemonic-file $TMP_MNEMONICS --overwrite
# echo "$HOT_WALLET_2_MNEMONIC" > $TMP_MNEMONICS
# $HERMES_CMD keys add --key-name hrly2 --chain $HOST_CHAIN_ID --mnemonic-file $TMP_MNEMONICS --overwrite
# rm -f $TMP_MNEMONICS

echo "Adding Relayer keys"
RELAYER_CMD="$SCRIPT_DIR/../../build/relayer --home $STATE/relayer"
$RELAYER_CMD keys restore stride rly1 "$RELAYER_STRIDE_MNEMONIC" 
$RELAYER_CMD keys restore host rly2 "$HOT_WALLET_3_MNEMONIC" 

# Update commands template
COMMANDS_FILE=${SCRIPT_DIR}/commands.sh
cp ${SCRIPT_DIR}/templates/commands.sh $COMMANDS_FILE
DOCKER_COMPOSE_RELATIVE="docker-compose -f scripts/local-to-mainnet/docker-compose.yml"
SCRIPTS_RELATIVE=scripts
STATE_RELATIVE=$SCRIPTS_RELATIVE/state
LOGS_RELATIVE=$SCRIPTS_RELATIVE/logs
STRIDE_HOME_RELATIVE=$SCRIPTS_RELATIVE/state/stride1
sed -i -E '1s/^/############################################\n### WARNING: THIS FILE IS AUTOGENERATED. ###\n###   ANY CHANGES WILL BE OVERWRITTEN.   ###\n############################################\n/' $COMMANDS_FILE
sed -i -E "s|DOCKER_COMPOSE|$DOCKER_COMPOSE_RELATIVE|g" $COMMANDS_FILE
sed -i -E "s|STATE|$STATE_RELATIVE|g" $COMMANDS_FILE
sed -i -E "s|LOGS|$LOGS_RELATIVE|g" $COMMANDS_FILE
sed -i -E "s|STRIDE_HOME|$STRIDE_HOME_RELATIVE|g" $COMMANDS_FILE
sed -i -E "s|STRIDE_CHAIN_ID|$STRIDE_CHAIN_ID|g" $COMMANDS_FILE
sed -i -E "s|HOST_CHAIN_ID|$HOST_CHAIN_ID|g" $COMMANDS_FILE
sed -i -E "s|HOST_BINARY|$HOST_BINARY|g" $COMMANDS_FILE
sed -i -E "s|HOST_DENOM|$HOST_DENOM|g" $COMMANDS_FILE
sed -i -E "s|HOST_ACCOUNT_PREFIX|$HOST_ACCOUNT_PREFIX|g" $COMMANDS_FILE
sed -i -E "s|HOST_RPC|$HOST_RPC|g" $COMMANDS_FILE
sed -i -E "s|HOST_VAL_NAME_1|$HOST_VAL_NAME_1|g" $COMMANDS_FILE
sed -i -E "s|HOST_VAL_NAME_2|$HOST_VAL_NAME_2|g" $COMMANDS_FILE
sed -i -E "s|HOST_VAL_ADDRESS_1|$HOST_VAL_ADDRESS_1|g" $COMMANDS_FILE
sed -i -E "s|HOST_VAL_ADDRESS_2|$HOST_VAL_ADDRESS_2|g" $COMMANDS_FILE
sed -i -E "s|HOT_WALLET_ADDRESS|$HOT_WALLET_1_ADDRESS|g" $COMMANDS_FILE

rm -f $COMMANDS_FILE-E
echo "Done"