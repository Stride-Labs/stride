# Helm TODO: app name, images, home directories, start command
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.chainName }}-validator
  namespace: integration
spec:
  replicas: 3
  selector:
    matchLabels:
      app: {{ .Values.chainName }}-validator
  serviceName: {{ .Values.chainName }}-validator
  template:
    metadata:
      labels:
        app: {{ .Values.chainName }}-validator
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: init
          image: gcr.io/stride-nodes/integration-tests/chains/cosmoshub:v18.1.0
          imagePullPolicy: Always
          command:
            - bash
            - "-c"
            - |
              POD_INDEX=${HOSTNAME##*-}
              if [[ "$POD_INDEX" == "0" ]]; then
                bash scripts/init-chain.sh
              fi
              bash scripts/init-node.sh
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CHAIN_NAME
              value: {{ .Values.chainName }}
            - name: CHAIN_HOME
              value: /home/validator/.gaia
            - name: BINARY
              value: gaiad
            - name: DENOM
              value: uatom
            - name: DENOM_DECIMALS
              value: "6"
            - name: NUM_VALIDATORS
              value: "3"
          volumeMounts:
            - name: state
              mountPath: /home/validator/.gaia
            - name: scripts
              mountPath: /home/validator/scripts
            - name: config
              mountPath: /home/validator/config
      containers:
        - name: validator
          image: gcr.io/stride-nodes/integration-tests/chains/cosmoshub:v18.1.0
          imagePullPolicy: Always
          command: ["gaiad", "start"]
          lifecycle:
            postStart:
              exec:
                command: ["bash", "scripts/create-validator.sh"]
          readinessProbe:
            exec:
              command: ["bash", "scripts/readiness.sh"]
            periodSeconds: 10
          env:
            # TODO: Make it so that these aren't all required
            - name: CHAIN_NAME
              value: {{ .Values.chainName }}
            - name: CHAIN_HOME
              value: /home/validator/.gaia
            - name: BINARY
              value: gaiad
            - name: DENOM
              value: uatom
            - name: DENOM_DECIMALS
              value: "6"
            - name: NUM_VALIDATORS
              value: "3"
          ports:
            - name: rpc
              containerPort: 26657
              protocol: TCP
            - name: peer
              containerPort: 26656
              protocol: TCP
            - name: api
              containerPort: 1317
              protocol: TCP
            - name: grpc
              containerPort: 9090
              protocol: TCP
          volumeMounts:
            - name: state
              mountPath: /home/validator/.gaia
            - name: scripts
              mountPath: /home/validator/scripts
            - name: config
              mountPath: /home/validator/config
          resources:
            limits:
              cpu: "1000m"
              memory: "2Gi"
            requests:
              cpu: "1000m"
              memory: "2Gi"
      volumes:
        - name: state
          emptyDir: {}
        - name: scripts
          configMap:
            name: scripts
        - name: config
          configMap:
            name: config
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.chainName }}-validator
  namespace: integration
spec:
  clusterIP: None
  selector:
    app: {{ .Values.chainName }}-validator
  ports:
    - port: 26657
      name: rpc
      protocol: TCP
    - port: 26656
      name: peer
      protocol: TCP
    - port: 1317
      name: api
      protocol: TCP
    - port: 9090
      name: grpc
      protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.chainName }}-ingress
  namespace: integration
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "360"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "360"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "360"
spec:
  ingressClassName: nginx
  rules:
    - host: {{ .Values.chainName }}-api.internal.stridenet.co
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: {{ .Values.chainName }}-validator
                port:
                  number: 1317
            path: /(.*)
    - host: {{ .Values.chainName }}-rpc.internal.stridenet.co
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: {{ .Values.chainName }}-validator
                port:
                  number: 26657
            path: /(.*)
